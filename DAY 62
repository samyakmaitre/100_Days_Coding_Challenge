 class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return buildTreeHelper(preorder, 0, inorder, 0, inorder.length - 1);
    }

    private TreeNode buildTreeHelper(int[] preorder, int preStart, int[] inorder, int inStart, int inEnd) {
        if (inStart > inEnd) {
            return null;
        }

        TreeNode root = new TreeNode(preorder[preStart]);

        int index = -1;
        for (int i = inStart; i <= inEnd; i++) {
            if (inorder[i] == root.val) {
                index = i;
                break;
            }
        }

        int leftSubtreeSize = index - inStart;

        root.left = buildTreeHelper(preorder, preStart + 1, inorder, inStart, index - 1);
        root.right = buildTreeHelper(preorder, preStart + leftSubtreeSize + 1, inorder, index + 1, inEnd);

        return root;
    }
}
